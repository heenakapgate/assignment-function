==========QUE-1====================
delimiter $$
create function fact(x int)returns int
begin
declare fact int;
declare i int;
set fact=1 ,  i=1;
MAYUR:loop
if x>0 then
set fact = fact * i;
set i = i+1;
set x = x-1;
iterate MAYUR;
else
leave MAYUR;
end if;
end loop MAYUR;
return fact;
end $$
select fact(2);

============QUE-2============
delimiter $$
CREATE FUNCTION PRIME(X INT) RETURNS VARCHAR(10)
BEGIN
	DECLARE M ,I INT;
	SET I=2;
	SET M=X/2;
	IF X=0 || X=1 THEN 
		RETURN 'NOT PRIME';
    ELSE
		MAYUR: LOOP
		WHILE I<=M DO
			IF X%2=0 THEN 
				RETURN 'NOT PRIME';
				LEAVE MAYUR;
				ELSE
				SET I=I+1;
				ITERATE MAYUR;
			END IF;
	   END WHILE;
       RETURN 'PRIME';
	END LOOP MAYUR;
	END IF;
END$$

/que-3 -----------------/
DELIMITER $$
 CREATE FUNCTION FUNCTION3(VAR INTEGER) RETURNS VARCHAR(30)
 BEGIN
 DECLARE A,B,C INTEGER;
 SET A = VAR/36;
 SET VAR = VAR%36;
 SET B = VAR/12;
 SET VAR = VAR%12;
 SET C = VAR;
 RETURN concat(A ," yards",B,"foot ",C"inches");
 END $$

-- que-4---------------
create table Employee(
empid int,
emp_name varchar(20),
salary	int,
deptno inT);
insert into Employee values (1,'ABC',5000,101);

delimiter $$
create function Que4(dept int) returns varchar(20)
begin
update Employee set salary=salary+(salary*0.10) where deptno=dept;
return 'UPDATED';
end $$
select * from employee;
select Que4(101);

----- que-5 ---------------

-- select * from emp;
delimiter $$
 create function Q5(empn int ,comp int ) returns int
 begin
 declare val int;
 set val=(select sal from emp where empno=empn);
 return (val+comp)*12;
 end;$$
 
 
 select Q(1004,20) as 'updated salary';
 
----- ---- que-6
 
delimiter $$
CREATE PROCEDURE USER_QUERY_EMP  (IN P_ENO INT, OUT P_JOB VARCHAR(10), OUT P_SAL INT3 ) 
BEGIN
DECLARE NO INT;
SET NO = (SELECT COUNT(*) FROM EMP WHERE EMPNO=P_ENO);
IF NO=0 THEN 
SELECT 'employee not exists';
SET P_JOB='';
SET P_SAL=0;
ELSE 
SELECT SAL,JOB INTO P_SAL,P_JOB FROM EMP WHERE EMPNO=P_ENO;
END IF;
END$$

CALL USER_QUERY_EMP(1004,@JOB,@SAL);
SELECT @JOB,@SAL






-- que-7 --------------------------
delimiter $$
 create procedure Que7(inout str varchar(200))
 begin
	if (str='' || isnull(str))  then
	set str= 'no string fount';
    else
    set str= (select reverse(str));
    end if;
 end $$
-- drop procedure que007;
set @str1=null;
call Que7(@str1);
select @str1;

-- que-8 ---------------------------
-- 8.	Create a procedure named ‘tabledetails’ which gives all the details of a particular table stored in database.

delimiter $$
create procedure Que008()
begin
show databases;
end;$$

call Que008();
